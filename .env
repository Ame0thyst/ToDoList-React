##
// import { useState, useEffect } from "react";
// import tambah from "./assets/tambah.png"; // Import gambar

// const App = () => {
//   // State untuk menyimpan todo list di masing-masing bagian
//   const [doTasks, setDoTasks] = useState([]);
//   const [decideTasks, setDecideTasks] = useState([]);
//   const [delegateTasks, setDelegateTasks] = useState([]);
//   const [deleteTasks, setDeleteTasks] = useState([]);
//   const [showForm, setShowForm] = useState(false);

//   // State untuk form input
//   const [description, setDescription] = useState("");
//   const [media, setMedia] = useState(null);
//   const [priority, setPriority] = useState("do");

//   // Memuat data dari localStorage saat aplikasi pertama kali dijalankan
//   useEffect(() => {
//     const storedDoTasks = JSON.parse(localStorage.getItem("doTasks"));
//     const storedDecideTasks = JSON.parse(localStorage.getItem("decideTasks"));
//     const storedDelegateTasks = JSON.parse(
//       localStorage.getItem("delegateTasks")
//     );
//     const storedDeleteTasks = JSON.parse(localStorage.getItem("deleteTasks"));

//     if (storedDoTasks) setDoTasks(storedDoTasks);
//     if (storedDecideTasks) setDecideTasks(storedDecideTasks);
//     if (storedDelegateTasks) setDelegateTasks(storedDelegateTasks);
//     if (storedDeleteTasks) setDeleteTasks(storedDeleteTasks);
//   }, []);

//   // Menyimpan data ke localStorage setiap kali state diubah
//   useEffect(() => {
//     localStorage.setItem("doTasks", JSON.stringify(doTasks));
//   }, [doTasks]);

//   useEffect(() => {
//     localStorage.setItem("decideTasks", JSON.stringify(decideTasks));
//   }, [decideTasks]);

//   useEffect(() => {
//     localStorage.setItem("delegateTasks", JSON.stringify(delegateTasks));
//   }, [delegateTasks]);

//   useEffect(() => {
//     localStorage.setItem("deleteTasks", JSON.stringify(deleteTasks));
//   }, [deleteTasks]);

//   const handleAddClick = () => {
//     setShowForm(!showForm);
//   };

//   const handleFormSubmit = (e) => {
//     e.preventDefault();

//     // Buat objek baru untuk todo
//     const newTodo = {
//       description,
//       media,
//     };

//     // Masukkan ke bagian yang sesuai
//     switch (priority) {
//       case "do":
//         setDoTasks([...doTasks, newTodo]);
//         break;
//       case "decide":
//         setDecideTasks([...decideTasks, newTodo]);
//         break;
//       case "delegate":
//         setDelegateTasks([...delegateTasks, newTodo]);
//         break;
//       case "delete":
//         setDeleteTasks([...deleteTasks, newTodo]);
//         break;
//       default:
//         break;
//     }

//     // Reset form
//     setDescription("");
//     setMedia(null);
//     setPriority("do");
//     setShowForm(false);
//   };

//   return (
//     <div className="h-screen relative grid grid-cols-2 grid-rows-2 gap-4">
//       {/* Bagian untuk Do */}
//       <div className="bg-green-300 p-4">
//         <h2 className="text-2xl font-bold text-center mb-2">Do</h2>
//         <ul>
//           {doTasks.map((task, index) => (
//             <li key={index}>
//               {task.description}{" "}
//               {task.media && (
//                 <img
//                   src={URL.createObjectURL(task.media)}
//                   alt="task media"
//                   className="w-10 h-10 inline"
//                 />
//               )}
//             </li>
//           ))}
//         </ul>
//       </div>

//       {/* Bagian untuk Delegate */}
//       <div className="bg-yellow-300 p-4">
//         <h2 className="text-2xl font-bold text-center mb-2">Delegate</h2>
//         <ul>
//           {delegateTasks.map((task, index) => (
//             <li key={index}>
//               {task.description}{" "}
//               {task.media && (
//                 <img
//                   src={URL.createObjectURL(task.media)}
//                   alt="task media"
//                   className="w-10 h-10 inline"
//                 />
//               )}
//             </li>
//           ))}
//         </ul>
//       </div>

//       {/* Bagian untuk Decide */}
//       <div className="bg-red-300 p-4">
//         <h2 className="text-2xl font-bold text-center mb-2">Decide</h2>
//         <ul>
//           {decideTasks.map((task, index) => (
//             <li key={index}>
//               {task.description}{" "}
//               {task.media && (
//                 <img
//                   src={URL.createObjectURL(task.media)}
//                   alt="task media"
//                   className="w-10 h-10 inline"
//                 />
//               )}
//             </li>
//           ))}
//         </ul>
//       </div>

//       {/* Bagian untuk Delete */}
//       <div className="bg-blue-300 p-4">
//         <h2 className="text-2xl font-bold text-center mb-2">Delete</h2>
//         <ul>
//           {deleteTasks.map((task, index) => (
//             <li key={index}>
//               {task.description}{" "}
//               {task.media && (
//                 <img
//                   src={URL.createObjectURL(task.media)}
//                   alt="task media"
//                   className="w-10 h-10 inline"
//                 />
//               )}
//             </li>
//           ))}
//         </ul>
//       </div>

//       {/* Tombol tanda tambah sebagai gambar */}
//       <img
//         src={tambah}
//         alt="Add To Do"
//         className="absolute inset-1/2 transform -translate-x-1/2 -translate-y-1/2 w-16 h-16 cursor-pointer"
//         onClick={handleAddClick}
//       />

//       {/* Formulir muncul saat tombol klik */}
//       {showForm && (
//         <div className="absolute inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center">
//           <div className="bg-white p-8 rounded-lg shadow-lg">
//             <h3 className="text-2xl mb-4">Add New To Do</h3>
//             <form onSubmit={handleFormSubmit}>
//               <div className="mb-4">
//                 <label className="block text-gray-700">Deskripsi</label>
//                 <input
//                   type="text"
//                   value={description}
//                   onChange={(e) => setDescription(e.target.value)}
//                   className="w-full p-2 border border-gray-300 rounded"
//                   required
//                 />
//               </div>
//               <div className="mb-4">
//                 <label className="block text-gray-700">Media</label>
//                 <input
//                   type="file"
//                   onChange={(e) => setMedia(e.target.files[0])}
//                   className="w-full p-2 border border-gray-300 rounded"
//                 />
//               </div>
//               <div className="mb-4">
//                 <label className="block text-gray-700">
//                   Tingkat Kepentingan
//                 </label>
//                 <select
//                   value={priority}
//                   onChange={(e) => setPriority(e.target.value)}
//                   className="w-full p-2 border border-gray-300 rounded"
//                   required
//                 >
//                   <option value="do">Do</option>
//                   <option value="decide">Decide</option>
//                   <option value="delegate">Delegate</option>
//                   <option value="delete">Delete</option>
//                 </select>
//               </div>
//               <button
//                 type="submit"
//                 className="bg-blue-500 text-white px-4 py-2 rounded"
//               >
//                 Add
//               </button>
//             </form>
//             <button
//               className="mt-4 text-red-500"
//               onClick={() => setShowForm(false)}
//             >
//               Close
//             </button>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// };

// export default App;